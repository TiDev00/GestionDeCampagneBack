// <auto-generated />
using System;
using GestionDeCampagneBack.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionDeCampagneBack.Migrations
{
    [DbContext(typeof(Gestion_de_campagneDBContext))]
    [Migration("20210417183058_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "French_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionDeCampagneBack.Models.Campagne", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateDeDébut")
                        .HasColumnType("date")
                        .HasColumnName("Date de début");

                    b.Property<DateTime?>("DateDeFin")
                        .HasColumnType("date")
                        .HasColumnName("Date de fin");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCanalEnvoi")
                        .HasColumnType("int")
                        .HasColumnName("Id_Canal_envoi");

                    b.Property<int?>("IdCategorie")
                        .HasColumnType("int")
                        .HasColumnName("Id_Categorie");

                    b.Property<int?>("IdInfosMessage")
                        .HasColumnType("int")
                        .HasColumnName("Id_Infos_message");

                    b.Property<int?>("IdNiveauVisibilité")
                        .HasColumnType("int")
                        .HasColumnName("Id_Niveau_visibilité");

                    b.Property<int?>("IdRegleEnvoi")
                        .HasColumnType("int")
                        .HasColumnName("Id_Regle_envoi");

                    b.Property<int?>("IdTypeCampagne")
                        .HasColumnType("int")
                        .HasColumnName("Id_Type_campagne");

                    b.Property<int?>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("Id_utilisateur");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.Property<string>("Titre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCanalEnvoi" }, "IX_Campagne_Id_Canal_envoi");

                    b.HasIndex(new[] { "IdCategorie" }, "IX_Campagne_Id_Categorie");

                    b.HasIndex(new[] { "IdInfosMessage" }, "IX_Campagne_Id_Infos_message");

                    b.HasIndex(new[] { "IdNiveauVisibilité" }, "IX_Campagne_Id_Niveau_visibilité");

                    b.HasIndex(new[] { "IdRegleEnvoi" }, "IX_Campagne_Id_Regle_envoi");

                    b.HasIndex(new[] { "IdTypeCampagne" }, "IX_Campagne_Id_Type_campagne");

                    b.HasIndex(new[] { "IdUtilisateur" }, "IX_Campagne_Id_utilisateur");

                    b.ToTable("Campagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.CanalEnvoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<int?>("IdConatctCanal")
                        .HasColumnType("int")
                        .HasColumnName("Id_Conatct_Canal");

                    b.Property<string>("Titre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdConatctCanal" }, "IX_Canal_envoi_Id_Conatct_Canal");

                    b.ToTable("Canal_envoi");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libellé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Catégorie");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Anniverssaire")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pays")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Profession")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Sexe")
                        .HasColumnType("bit");

                    b.Property<bool?>("Situation")
                        .HasColumnType("bit");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tel")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactCanal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateDesa")
                        .HasColumnType("date");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<int?>("IdContact")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact");

                    b.Property<string>("Lien")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Raison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdContact" }, "IX_Contact_Canal_Id_Contact");

                    b.ToTable("Contact_Canal");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactListeDiffusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateDesa")
                        .HasColumnType("date");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<int?>("IdContact")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact");

                    b.Property<string>("Raison")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdContact" }, "IX_Contact_Liste_diffusion_Id_Contact");

                    b.ToTable("Contact_Liste_diffusion");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.InfosMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MessageAcheminés")
                        .HasColumnType("int")
                        .HasColumnName("Message_Acheminés");

                    b.Property<int?>("MessageEnCours")
                        .HasColumnType("int")
                        .HasColumnName("Message_en_cours");

                    b.Property<int?>("MessageErreur")
                        .HasColumnType("int")
                        .HasColumnName("Message_erreur");

                    b.Property<int?>("MessagePrevu")
                        .HasColumnType("int")
                        .HasColumnName("Message_Prevu");

                    b.HasKey("Id");

                    b.ToTable("Infos_Message");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ListeDeDiffusion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<int?>("IdContactListeDiffusion")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact_Liste_Diffusion");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.Property<string>("Titre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdContactListeDiffusion" }, "IX_Liste_de_diffusion_Id_Contact_Liste_Diffusion");

                    b.ToTable("Liste_de_diffusion");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ListeDffCampagne", b =>
                {
                    b.Property<int?>("IdCampagne")
                        .HasColumnType("int")
                        .HasColumnName("Id_Campagne");

                    b.Property<int?>("IdListe")
                        .HasColumnType("int")
                        .HasColumnName("Id_Liste");

                    b.HasIndex("IdCampagne");

                    b.HasIndex("IdListe");

                    b.ToTable("ListeDffCampagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Modèle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contenu")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Libellé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Modèle");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ModèleCampagne", b =>
                {
                    b.Property<int?>("IdCampagne")
                        .HasColumnType("int")
                        .HasColumnName("Id_campagne");

                    b.Property<int?>("IdModèle")
                        .HasColumnType("int")
                        .HasColumnName("Id_Modèle");

                    b.HasIndex("IdCampagne");

                    b.HasIndex("IdModèle");

                    b.ToTable("Modèle_campagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.NiveauDeVisibilite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdConatct")
                        .HasColumnType("int")
                        .HasColumnName("Id_Conatct");

                    b.Property<int?>("IdContactListeDiffusion")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact_Liste_diffusion");

                    b.Property<string>("Libellé")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdConatct" }, "IX_Niveau_de_visibilite_Id_Conatct");

                    b.HasIndex(new[] { "IdContactListeDiffusion" }, "IX_Niveau_de_visibilite_Id_Contact_Liste_diffusion");

                    b.ToTable("Niveau_de_visibilite");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.RegleDEnvoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateExecution")
                        .HasColumnType("datetime");

                    b.Property<string>("Expediteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Frequence")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FuseauHoraire")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Fuseau_horaire");

                    b.Property<int?>("NombreTentative")
                        .HasColumnType("int")
                        .HasColumnName("Nombre_Tentative");

                    b.Property<string>("Recepteur")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regle_dEnvoi");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdUtilisateur")
                        .HasColumnType("int")
                        .HasColumnName("Id_utilisateur");

                    b.Property<string>("Libellé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasIndex(new[] { "IdUtilisateur" }, "IX_Role_Id_utilisateur");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.SuiviCampagne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenu")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateEnvoi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReact")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdContact")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact");

                    b.Property<int?>("NombreDeTentative")
                        .HasColumnType("int")
                        .HasColumnName("Nombre_de_tentative");

                    b.Property<bool?>("Reaction")
                        .HasColumnType("bit");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdContact" }, "IX_Suivi_campagne_Id_Contact");

                    b.ToTable("Suivi_campagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.SuiviCampagneCampagne", b =>
                {
                    b.Property<int?>("IdCampagne")
                        .HasColumnType("int")
                        .HasColumnName("Id_campagne");

                    b.Property<int?>("IdSuivi")
                        .HasColumnType("int")
                        .HasColumnName("Id_Suivi");

                    b.HasIndex("IdCampagne");

                    b.HasIndex("IdSuivi");

                    b.ToTable("SuiviCampagne_Campagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.TypeDeCampagne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libellé")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Type_de_campagne");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<bool?>("Etat")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MotDePasse")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mot de passe");

                    b.Property<string>("Nom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Statut")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Variable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdContact")
                        .HasColumnType("int")
                        .HasColumnName("Id_Contact");

                    b.Property<byte[]>("NomAffichage")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)");

                    b.Property<string>("NomTechnique")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TailleMax")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Valeur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdContact" }, "IX_Variable_Id_Contact");

                    b.ToTable("Variable");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Campagne", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.CanalEnvoi", "IdCanalEnvoiNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdCanalEnvoi")
                        .HasConstraintName("FK_Campagne_Canal_envoi");

                    b.HasOne("GestionDeCampagneBack.Models.Categorie", "IdCategorieNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdCategorie")
                        .HasConstraintName("FK_Campagne_Catégorie");

                    b.HasOne("GestionDeCampagneBack.Models.InfosMessage", "IdInfosMessageNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdInfosMessage")
                        .HasConstraintName("FK_Campagne_Infos_Message");

                    b.HasOne("GestionDeCampagneBack.Models.NiveauDeVisibilite", "IdNiveauVisibilitéNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdNiveauVisibilité")
                        .HasConstraintName("FK_Campagne_Niveau_de_visibilite");

                    b.HasOne("GestionDeCampagneBack.Models.RegleDEnvoi", "IdRegleEnvoiNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdRegleEnvoi")
                        .HasConstraintName("FK_Campagne_Regle_dEnvoi");

                    b.HasOne("GestionDeCampagneBack.Models.TypeDeCampagne", "IdTypeCampagneNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdTypeCampagne")
                        .HasConstraintName("FK_Campagne_Type_de_campagne");

                    b.HasOne("GestionDeCampagneBack.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Campagnes")
                        .HasForeignKey("IdUtilisateur")
                        .HasConstraintName("FK_Campagne_Utilisateur");

                    b.Navigation("IdCanalEnvoiNavigation");

                    b.Navigation("IdCategorieNavigation");

                    b.Navigation("IdInfosMessageNavigation");

                    b.Navigation("IdNiveauVisibilitéNavigation");

                    b.Navigation("IdRegleEnvoiNavigation");

                    b.Navigation("IdTypeCampagneNavigation");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.CanalEnvoi", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.ContactCanal", "IdConatctCanalNavigation")
                        .WithMany("CanalEnvois")
                        .HasForeignKey("IdConatctCanal")
                        .HasConstraintName("FK_Canal_envoi_Contact_Canal");

                    b.Navigation("IdConatctCanalNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactCanal", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Contact", "IdContactNavigation")
                        .WithMany("ContactCanals")
                        .HasForeignKey("IdContact")
                        .HasConstraintName("FK_Contact_Canal_Contact");

                    b.Navigation("IdContactNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactListeDiffusion", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Contact", "IdContactNavigation")
                        .WithMany("ContactListeDiffusions")
                        .HasForeignKey("IdContact")
                        .HasConstraintName("FK_Contact_Liste_diffusion_Contact");

                    b.Navigation("IdContactNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ListeDeDiffusion", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.ContactListeDiffusion", "IdContactListeDiffusionNavigation")
                        .WithMany("ListeDeDiffusions")
                        .HasForeignKey("IdContactListeDiffusion")
                        .HasConstraintName("FK_Liste_de_diffusion_Contact_Liste_diffusion");

                    b.Navigation("IdContactListeDiffusionNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ListeDffCampagne", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Campagne", "IdCampagneNavigation")
                        .WithMany()
                        .HasForeignKey("IdCampagne")
                        .HasConstraintName("FK_ListeDffCampagne");

                    b.HasOne("GestionDeCampagneBack.Models.ListeDeDiffusion", "IdListeNavigation")
                        .WithMany()
                        .HasForeignKey("IdListe")
                        .HasConstraintName("FK_ListeDffCampagne_Liste_de_diffusion_Id");

                    b.Navigation("IdCampagneNavigation");

                    b.Navigation("IdListeNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ModèleCampagne", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Campagne", "IdCampagneNavigation")
                        .WithMany()
                        .HasForeignKey("IdCampagne")
                        .HasConstraintName("FK_Modèle_campagne");

                    b.HasOne("GestionDeCampagneBack.Models.Modèle", "IdModèleNavigation")
                        .WithMany()
                        .HasForeignKey("IdModèle")
                        .HasConstraintName("FK_Modèle_campagne_Modèle_Id");

                    b.Navigation("IdCampagneNavigation");

                    b.Navigation("IdModèleNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.NiveauDeVisibilite", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Contact", "IdConatctNavigation")
                        .WithMany("NiveauDeVisibilites")
                        .HasForeignKey("IdConatct")
                        .HasConstraintName("FK_Niveau_de_visibilite_Contact");

                    b.HasOne("GestionDeCampagneBack.Models.ContactListeDiffusion", "IdContactListeDiffusionNavigation")
                        .WithMany("NiveauDeVisibilites")
                        .HasForeignKey("IdContactListeDiffusion")
                        .HasConstraintName("FK_Niveau_de_visibilite_Contact_Liste_diffusion");

                    b.Navigation("IdConatctNavigation");

                    b.Navigation("IdContactListeDiffusionNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Role", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany()
                        .HasForeignKey("IdUtilisateur")
                        .HasConstraintName("FK_Role_Utilisateur");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.SuiviCampagne", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Contact", "IdContactNavigation")
                        .WithMany("SuiviCampagnes")
                        .HasForeignKey("IdContact")
                        .HasConstraintName("FK_Suivi_campagne_Contact");

                    b.Navigation("IdContactNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.SuiviCampagneCampagne", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Campagne", "IdCampagneNavigation")
                        .WithMany()
                        .HasForeignKey("IdCampagne")
                        .HasConstraintName("FK_SuiviCampagne_Campagne_Campagne_Id");

                    b.HasOne("GestionDeCampagneBack.Models.SuiviCampagne", "IdSuiviNavigation")
                        .WithMany()
                        .HasForeignKey("IdSuivi")
                        .HasConstraintName("FK_SuiviCampagne_Campagne_Suivi_campagne_Id");

                    b.Navigation("IdCampagneNavigation");

                    b.Navigation("IdSuiviNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Variable", b =>
                {
                    b.HasOne("GestionDeCampagneBack.Models.Contact", "IdContactNavigation")
                        .WithMany("Variables")
                        .HasForeignKey("IdContact")
                        .HasConstraintName("FK_Variable_Contact");

                    b.Navigation("IdContactNavigation");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.CanalEnvoi", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Categorie", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Contact", b =>
                {
                    b.Navigation("ContactCanals");

                    b.Navigation("ContactListeDiffusions");

                    b.Navigation("NiveauDeVisibilites");

                    b.Navigation("SuiviCampagnes");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactCanal", b =>
                {
                    b.Navigation("CanalEnvois");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.ContactListeDiffusion", b =>
                {
                    b.Navigation("ListeDeDiffusions");

                    b.Navigation("NiveauDeVisibilites");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.InfosMessage", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.NiveauDeVisibilite", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.RegleDEnvoi", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.TypeDeCampagne", b =>
                {
                    b.Navigation("Campagnes");
                });

            modelBuilder.Entity("GestionDeCampagneBack.Models.Utilisateur", b =>
                {
                    b.Navigation("Campagnes");
                });
#pragma warning restore 612, 618
        }
    }
}
